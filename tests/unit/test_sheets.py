#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import asyncio
import httpx
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_google_sheets():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    base_url = "http://localhost:8000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    async with httpx.AsyncClient() as client:
        # 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        print("1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤...")
        try:
            response = await client.post(f"{base_url}/sheets/setup/")
            if response.status_code == 200:
                data = response.json()
                if data.get("status") == "success":
                    print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('message')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
        
        # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∂–∞–ª–æ–±—ã
        print("2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∂–∞–ª–æ–±—ã...")
        try:
            complaint_data = {"text": "–¢–µ—Å—Ç–æ–≤–∞—è –∂–∞–ª–æ–±–∞ –¥–ª—è Google Sheets - —Å–∞–π—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"}
            response = await client.post(
                f"{base_url}/complaints/",
                json=complaint_data,
                headers={"Content-Type": "application/json"}
            )
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –ñ–∞–ª–æ–±–∞ —Å–æ–∑–¥–∞–Ω–∞: ID {data.get('id')}")
                print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {data.get('category')}")
                print(f"   –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {data.get('sentiment')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∂–∞–ª–æ–±—ã: {e}")
        
        # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏
        print("3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏...")
        try:
            response = await client.get(f"{base_url}/sheets/summary/")
            if response.status_code == 200:
                data = response.json()
                if data.get("status") == "success":
                    summary = data.get("data", {})
                    print(f"‚úÖ –°–≤–æ–¥–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
                    print(f"   –í—Å–µ–≥–æ –∂–∞–ª–æ–±: {summary.get('total_complaints', 0)}")
                    print(f"   –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º: {summary.get('by_category', {})}")
                    print(f"   –ü–æ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: {summary.get('by_sentiment', {})}")
                    print(f"   –°–ø–∞–º: {summary.get('spam_count', 0)}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('message')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏: {e}")
        
        # 4. –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∂–∞–ª–æ–±
        print("4. –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∂–∞–ª–æ–±...")
        try:
            response = await client.post(f"{base_url}/sheets/export/")
            if response.status_code == 200:
                data = response.json()
                if data.get("status") == "success":
                    export_data = data.get("data", {})
                    print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω:")
                    print(f"   –í—Å–µ–≥–æ –∂–∞–ª–æ–±: {export_data.get('total_complaints', 0)}")
                    print(f"   –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {export_data.get('exported_count', 0)}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('message')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {e}")

async def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    import os
    
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    credentials_file = os.getenv("GOOGLE_SHEETS_CREDENTIALS_FILE")
    spreadsheet_id = os.getenv("GOOGLE_SHEETS_SPREADSHEET_ID")
    
    if not credentials_file or credentials_file == "path_to_service_account.json":
        print("‚ùå GOOGLE_SHEETS_CREDENTIALS_FILE –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        print(f"‚úÖ GOOGLE_SHEETS_CREDENTIALS_FILE: {credentials_file}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
        if os.path.exists(credentials_file):
            print(f"‚úÖ –§–∞–π–ª credentials —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"‚ùå –§–∞–π–ª credentials –Ω–µ –Ω–∞–π–¥–µ–Ω: {credentials_file}")
    
    if not spreadsheet_id or spreadsheet_id == "your_spreadsheet_id_here":
        print("‚ùå GOOGLE_SHEETS_SPREADSHEET_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        print(f"‚úÖ GOOGLE_SHEETS_SPREADSHEET_ID: {spreadsheet_id}")
    
    print()

async def test_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    print("=" * 30)
    
    try:
        import gspread
        print("‚úÖ gspread —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå gspread –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install gspread")
    
    try:
        from google.oauth2.service_account import Credentials
        print("‚úÖ google-auth —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå google-auth –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install google-auth")
    
    print()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    await check_environment()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    await test_dependencies()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    await test_google_sheets()
    
    print("\n" + "=" * 60)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à—É Google Sheets —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")

if __name__ == "__main__":
    asyncio.run(main()) 